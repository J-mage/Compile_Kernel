name: "Compile Android Kernel"

on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'KERNEL_URL'
        required: true
        default: 'https://github.com/PPKunOfficial/android_kernel_xiaomi_sdm845.git'
      KERNEL_DIR:
        description: 'KERNEL_DIR'
        required: true
        default: 'android_kernel_xiaomi_sdm845'
      CLONE_ARG:
        description: 'CLONE_ARGUMENT'
        required: false
        default: '-b 12.0'
      ARCHOSUB:
        description: 'ARCH/SUBARCH'
        required: true
        default: 'arm64'
      TOOLCHAIN_DIR:
        description: 'TOOLCHAIN_DIR'
        required: true
        default: 'master/clang-stable'
      USEDEFCONFIG:
        description: 'USEDEFCONFIG'
        required: true
        default: 'dipper_defconfig'

jobs:
  ready_compile_env:
    name: Compile kernel
    runs-on: ubuntu-latest
    steps:
    - name: Ready Compile
      run: |
        sudo apt upgrade
        sudo apt update

        sudo apt-get install
        git ccache automake flex lzop bison \
        gperf build-essential zip curl
        zlib1g-dev zlib1g-dev:i386 \
        g++-multilib python-networkx 
        libxml2-utils bzip2 libbz2-dev \
        libbz2-1.0 libghc-bzlib-dev 
        squashfs-tools pngcrush \
        schedtool dpkg-dev liblz4-tool 
        make optipng maven libssl-dev \
        pwgen libswitch-perl policycoreutils 
        minicom libxml-sax-base-perl \
        libxml-simple-perl bc
        libc6-dev-i386 lib32ncurses5-dev \
        x11proto-core-dev libx11-dev 
        lib32z-dev libgl1-mesa-dev xsltproc unzip
        
    - name: Clone Source
      run: |
        git clone ${{ github.event.inputs.KERNEL_URL }} ${{ github.event.inputs.CLONE_ARG }}

        git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86

    - name: Compile Kernel
      run: |
        cd ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}
        
        export ARCH=${{ github.event.inputs.ARCHOSUB }}
        export SUBARCH=${{ github.event.inputs.ARCHOSUB }}
        export CC=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/clang
        export CROSS_COMPILE=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/arm-linux-gnueabi-
        PATH="${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin:$PATH"
        
        make O=out ${{ github.event.inputs.USEDEFCONFIG }}
        make -j128 O=out \
        ARCH=${{ github.event.inputs.ARCHOSUB }} \
        SUBARCH=${{ github.event.inputs.ARCHOSUB }} \
        CC=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/clang \
        CROSS_COMPILE=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/aarch64-linux-gnu- \
        CROSS_COMPILE_ARM32=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/arm-linux-gnueabi-
        
    - name: Creat Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Auto_Compile
        body: Release ${{ github.event.inputs.KERNEL_DIR }}
        files: |
          ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb
    
    - name: Upload to Cloud
      run: |
        sudo apt install curl
        curl -sL https://git.io/file-transfer | sh 
        curl --upload-file ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb https://transfer.sh/Image.gz-dtb
        ./transfer arp ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb --silent
        ./transfer cow ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb --silent
