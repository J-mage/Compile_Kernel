name: "Compile Android Kernel"

on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'KERNEL_URL'
        required: true
        default: 'https://github.com/PPKunOfficial/android_kernel_xiaomi_sdm845.git'
      KERNEL_DIR:
        description: 'KERNEL_DIR'
        required: true
        default: 'android_kernel_xiaomi_sdm845'
      CLONE_ARG:
        description: 'CLONE_ARGUMENT'
        required: false
        default: '-b 12.0'
      ARCHOSUB:
        description: 'ARCH/SUBARCH'
        required: true
        default: 'arm64'
      TOOLCHAIN_DIR:
        description: 'TOOLCHAIN_DIR'
        required: true
        default: 'proton-clang-20210522'
      USEDEFCONFIG:
        description: 'USEDEFCONFIG'
        required: true
        default: 'dipper_defconfig'

jobs:
  ready_compile_env:
    name: Compile kernel
    runs-on: ubuntu-latest
    steps:
    - name: Ready Compile
      run: |
        sudo apt upgrade
        sudo apt update
        sudo apt install -y openssl make python libssh-dev unzip git wget build-essential zip bc wget unzip p7zip-full git
        wget https://github.com/kdrag0n/proton-clang/archive/refs/tags/20210522.zip
        unzip ./20210522.zip
        chmod -R 777 ${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/
        
    - name: Clone Kernel Code
      run: |
        git clone ${{ github.event.inputs.KERNEL_URL }} ${{ github.event.inputs.CLONE_ARG }}

    - name: Compile Kernel
      run: |
        cd ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}
        
        export ARCH=${{ github.event.inputs.ARCHOSUB }}
        export SUBARCH=${{ github.event.inputs.ARCHOSUB }}
        export CC=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/clang
        export CROSS_COMPILE=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/arm-linux-gnueabi-
        PATH="${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin:$PATH"
        
        make O=out ARCH=${{ github.event.inputs.ARCHOSUB }} ${{ github.event.inputs.USEDEFCONFIG }}
        make -j128 O=out \
        ARCH=${{ github.event.inputs.ARCHOSUB }} \
        SUBARCH=${{ github.event.inputs.ARCHOSUB }} \
        CC=clang \
        CROSS_COMPILE=aarch64-linux-gnu-
      # CROSS_COMPILE_ARM32=${{ github.workspace }}/${{ github.event.inputs.TOOLCHAIN_DIR }}/bin/arm-linux-gnueabi-
        
    - name: Creat Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Auto_Compile
        body: Release ${{ github.event.inputs.KERNEL_DIR }}
        files: |
          ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb
    
    - name: Upload to Cloud
      run: |
        sudo apt install curl
        curl -sL https://git.io/file-transfer | sh 
        curl --upload-file ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb https://transfer.sh/Image.gz-dtb
        ./transfer arp ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb --silent
        ./transfer cow ${{ github.workspace }}/${{ github.event.inputs.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb --silent